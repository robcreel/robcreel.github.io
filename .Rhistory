# %>%
#   type_convert()
symdiff(update_df, ref_df) %>%
arrange(.data[[by]]) %>%
# type_convert() %>%
left_join(source_lookup_df)
}
main_df <- tibble(
id = as.character(1:100),
x = rnorm(100),
y = runif(100),
z = sample(letters, 100, replace = T)
)
main_df
main_df %>%
slice_sample(n = 5) %>%
mutate(
x = rnorm(5),
y = runif(5),
z = sample(letters, 5, replace = T)
) %>%
identity() -> update_df
update_df
main_df %>%
slice_sample(n = 5) %>%
mutate(x = rnorm(5)) %>%
identity() -> updatex_df
update_df <- updatex_df
update_df %>%
verify_subdf(main_df)
ref_df %>%
left_join(update_df, by = "id") %>% s
ref_df %>%
left_join(update_df, by = "id") %>%
identity() -> joined_df
update_df %>%
verify_subdf(main_df)
joined_df <- merge(
ref_df, update_df,
by = "id",
suffixes = c("_main", "_update"))
reshape(
diff_col_df, direction = "long", sep = "_",
varying = c("x_main", "x_update"),
timevar = "source"
)
diff_col_df <- unique_col_L_df[, unique_cols_list]
unique_col_L_df <- joined_df[!duplicated(as.list(joined_df))]
main_df %>%
left_join(update_df, by = "id") %>%
identity() -> joined_df
joined_df <- merge(
mai_df, update_df,
by = "id",
suffixes = c("_main", "_update"))
joined_df <- merge(
main_df, update_df,
by = "id",
suffixes = c("_main", "_update"))
unique_col_L_df <- joined_df[!duplicated(as.list(joined_df))]
unique_col_R_df <- joined_df[!duplicated(as.list(joined_df),fromLast = T)]
unique_cols_list <- intersect(names(unique_col_L_df), names(unique_col_R_df))
unique_cols_list
diff_col_df <- unique_col_L_df[, unique_cols_list]
diff_col_df
reshape(
diff_col_df, direction = "long", sep = "_",
varying = c("x_main", "x_update"),
timevar = "source"
)
reshape(
diff_col_df, direction = "long", sep = "_",
varying = c("x_main", "x_update"),
timevar = "source"
) %>%
order(id)
reshape(
diff_col_df, direction = "long", sep = "_",
varying = c("x_main", "x_update"),
timevar = "source"
) %>%
order(.[id])
reshape(
diff_col_df, direction = "long", sep = "_",
varying = c("x_main", "x_update"),
timevar = "source"
) %>%
order(.$id)
long_diff_df <- long_diff_df[order(long_diff_df$id)]
long_diff_df <- long_diff_df[order(long_diff_df$id)]
long_diff_df
long_diff_df <- reshape(
diff_col_df, direction = "long", sep = "_",
varying = c("x_main", "x_update"),
timevar = "source"
)
long_diff_df <- long_diff_df[order(long_diff_df$id)]
long_diff_df
long_diff_df <- long_diff_df[order(long_diff_df$id), ]
long_diff_df
rownames(long_diff_df) <- NULL
long_diff_df
1:10
substitute(1:10)
verify_subdf <- function(update_df, main_df,
by = names(update_df[,1]),
require_all_fields = T
){
if(!require_all_fields){
names_to_compare = intersect(names(main_df), names(update_df))
} else {
names_to_compare = names(update_df)
}
main_df %>%
slice_df_to_reference(update_df, by = by) %>%
mutate(across(everything(), as.character)) %>%
identity() -> ref_df
update_df %>%
mutate(across(everything(), as.character)) %>%
identity() -> update_df
update_df_source_lookup <- update_df %>%
mutate(source = "update_df") %>%
mutate(across(everything(), as.character))
ref_df_source_lookup <- ref_df %>%
mutate(source = "main_df") %>%
mutate(across(everything(), as.character))
source_lookup_df <- bind_rows(
update_df_source_lookup,
ref_df_source_lookup)
# %>%
#   type_convert()
symdiff(update_df, ref_df) %>%
arrange(.data[[by]]) %>%
# type_convert() %>%
left_join(source_lookup_df)
}
# Testing tidyverse version
main_df <- tibble(
id = as.character(1:100),
x = rnorm(100),
y = runif(100),
z = sample(letters, 100, replace = T)
)
main_df %>%
slice_sample(n = 5) %>%
mutate(
x = rnorm(5),
y = runif(5),
z = sample(letters, 5, replace = T)
) %>%
identity() -> update_df
main_df %>%
slice_sample(n = 5) %>%
mutate(x = rnorm(5)) %>%
identity() -> updatex_df
update_df %>%
verify_subdf(main_df)
update_df %>%
verify_subdf(main_df)
main_df %>%
slice_sample(n = 5) %>%
mutate(x = rnorm(5)) %>%
identity() -> updatex_df
update_df <- updatex_df
update_df %>%
verify_subdf(main_df)
main_df %>%
slice_sample(n = 5) %>%
mutate(y = runif(5)) %>%
identity() -> updatey_df
update_df <- bind_cols(
updatex_df,
updatey_df
)
update_df
update_df <- bind_rows(
updatex_df,
updatey_df
)
update_df
update_df %>%
verify_subdf(main_df)
update_df %>%
verify_subdf(main_df) %>%
pivot_longer(-c(id, source))
update_df %>%
verify_subdf(main_df) %>%
pivot_longer(-c(id, source)) %>%
distinct(-source)
update_df %>%
verify_subdf(main_df) %>%
pivot_longer(-c(id, source)) %>%
distinct(source)
update_df %>%
verify_subdf(main_df) %>%
pivot_longer(-c(id, source)) %>%
distinct(names(.) %>% setdiff("source"))
update_df %>%
verify_subdf(main_df) %>%
pivot_longer(-c(id, source)) %>%
names
update_df %>%
verify_subdf(main_df) %>%
pivot_longer(-c(id, source)) %>%
names %>% setdiff("source"))
update_df %>%
verify_subdf(main_df) %>%
pivot_longer(-c(id, source)) %>%
names %>% setdiff("source")
update_df %>%
verify_subdf(main_df) %>%
pivot_longer(-c(id, source)) %>%
# names %>% setdiff("source"))
distinct(id, name, value)
update_df %>%
verify_subdf(main_df) %>%
pivot_longer(-c(id, source)) %>%
dim
update_df %>%
verify_subdf(main_df) %>%
pivot_longer(-c(id, source)) %>%
distinct(id, name, value) %>%
dim
update_df %>%
verify_subdf(main_df) %>%
pivot_longer(-c(id, source)) %>%
distinct(id, name, value) %>%
sort(id, name)
update_df %>%
verify_subdf(main_df) %>%
pivot_longer(-c(id, source)) %>%
distinct(id, name, value) %>%
arramge(id, name)
update_df %>%
verify_subdf(main_df) %>%
pivot_longer(-c(id, source)) %>%
distinct(id, name, value) %>%
arrange(id, name)
update_df %>%
verify_subdf(main_df) %>%
pivot_longer(-c(id, source)) %>%
distinct(id, name, value) %>%
arrange(id, name) %>%
view(n = Inf)
update_df %>%
verify_subdf(main_df) %>%
pivot_longer(-c(id, source)) %>%
distinct(id, name, value) %>%
arrange(id, name) %>%
print(n = Inf)
update_df %>%
verify_subdf(main_df) %>%
pivot_longer(-c(id, source)) %>%
# distinct(id, name, value) %>%
arrange(id, name) %>%
print(n = Inf)
update_df %>%
verify_subdf(main_df) %>%
pivot_longer(-c(id, source)) %>%
group_by(id, name, value) %>%
filter(n() == 1)
arrange(id, name, source) %>%
print(n = Inf)
update_df %>%
verify_subdf(main_df) %>%
pivot_longer(-c(id, source)) %>%
group_by(id, name, value) %>%
filter(n() == 1) %>%
arrange(id, name, source) %>%
print(n = Inf)
main_df %>%
slice_sample(n = 5) %>%
mutate(z = sample(letters, 5, replace = T)) %>%
identity() -> updatez_df
update_df <- bind_rows(
updatex_df,
updatez_df
)
update_df %>%
verify_subdf(main_df)
update_df %>%
verify_subdf(main_df) %>%
pivot_longer(-c(id, source)) %>%
group_by(id, name, value) %>%
filter(n() == 1) %>%
arrange(id, name, source) %>%
print(n = Inf)
show_value_diffs <- function(update_df, main_df){
update_df %>%
verify_subdf(main_df) %>%
pivot_longer(-c(id, source)) %>%
group_by(id, name, value) %>%
filter(n() == 1) %>%
arrange(id, name, source)
}
update_df %>%
show_value_diffs(main_df)
library(tidytuesdayR)
library(tidyverse)
library(magrittr)
tt_data <- tt_load("2025-05-06")
tt_data
df <- tt_data$nsf_terminations
df
glimpse(df)
tt_data
count(df$in_cruz_list)
df %>%
count(in_cruz_list)
# data from the CSV download link at https://grant-watch.us/nsf-data.html
raw_nsf_terminations <- readr::read_csv("https://drive.usercontent.google.com/download?id=1TFoyowiiMFZm73iU4YORniydEeHhrsVz&export=download")
# Clean the data
nsf_terminations <- raw_nsf_terminations |>
janitor::clean_names() |>
mutate(usaspending_obligated = stringi::stri_replace_first_fixed(usaspending_obligated, "$", "") |>
readr::parse_number()) |>
mutate(in_cruz_list = !is.na(in_cruz_list)) |>
mutate(grant_number = as.character(grant_number))
library(janitor)
install.packages("janitor")
# Clean the data
nsf_terminations <- raw_nsf_terminations |>
janitor::clean_names() |>
mutate(usaspending_obligated = stringi::stri_replace_first_fixed(usaspending_obligated, "$", "") |>
readr::parse_number()) |>
mutate(in_cruz_list = !is.na(in_cruz_list)) |>
mutate(grant_number = as.character(grant_number))
raw_nsf_terminations
df %>%
count(award_type)
df %>%
count(termination_letter_date)
df %>%
summarise(tot = sum(usaspending_obligated))
df %>%
count(is.na(usaspending_obligated))
df %>%
# count(is.na(usaspending_obligated))
summarise(tot = sum(usaspending_obligated, na.rm = T))
df %>%
dim
df %>%
count(nsf_program_name)
df %>%
count(nsf_program_name, sort = T)
df %>%
group_by(nsf_program_name) %>%
summarise(tot = sum(usaspending_obligated, na.rm = T))
df %>%
group_by(nsf_program_name) %>%
summarise(tot = sum(usaspending_obligated, na.rm = T)) %>%
arrange(desc(tot))
df %>%
group_by(nsf_program_name) %>%
summarise(
tot = sum(usaspending_obligated, na.rm = T),
n = n()
) %>%
arrange(desc(tot))
df %>%
group_by(nsf_program_name) %>%
summarise(
tot = sum(usaspending_obligated, na.rm = T),
n = n(),
average = mean(usaspending_obligated)
) %>%
arrange(desc(tot))
df %>%
group_by(nsf_program_name) %>%
summarise(
tot = sum(usaspending_obligated, na.rm = T),
n = n(),
average = mean(usaspending_obligated, na.rm = T)
) %>%
arrange(desc(tot))
df %>%
group_by(nsf_program_name) %>%
summarise(
tot = sum(usaspending_obligated, na.rm = T),
n = n(),
average = mean(usaspending_obligated, na.rm = T)
) %>%
arrange(desc(tot)) %>%
view()
df %>%
count(org_city, in_cruz_list)
df %>%
count(org_city, in_cruz_list) %>%
summarise(
cruz_count = sum(in_cruz_list*n),
count = sum(n)
)
df %>%
count(org_city, in_cruz_list) %>%
summarise(.by = org_city
cruz_count = sum(in_cruz_list*n),
df %>%
count(org_city, in_cruz_list) %>%
summarise(.by = org_city,
cruz_count = sum(in_cruz_list*n),
count = sum(n)
)
df %>%
count(org_city, in_cruz_list) %>%
summarise(.by = org_city,
cruz_count = sum(in_cruz_list*n),
count = sum(n),
percent = cruz_count/ count
)
df %>%
count(org_city, in_cruz_list) %>%
summarise(.by = org_city,
cruz_count = sum(in_cruz_list*n),
count = sum(n),
percent = cruz_count/ count
) %>%
arrange(percent)
df %>%
count(org_city, in_cruz_list) %>%
summarise(.by = org_city,
cruz_count = sum(in_cruz_list*n),
count = sum(n),
percent = cruz_count/ count
) %>%
arrange(desc(percent))
df %>%
count(org_city, in_cruz_list) %>%
summarise(.by = org_city,
cruz_count = sum(in_cruz_list*n),
count = sum(n),
percent = cruz_count/ count
) %>%
arrange(desc(cruz_count))
df %>%
group_by(nsf_program_name) %>%
summarise(
tot = sum(usaspending_obligated, na.rm = T),
n = n(),
average = mean(usaspending_obligated, na.rm = T)
) %>%
arrange(desc(tot)) %>%
view()
df %>%
group_by(directorate) %>%
summarise(
tot = sum(usaspending_obligated, na.rm = T),
n = n(),
average = mean(usaspending_obligated, na.rm = T)
) %>%
arrange(desc(tot)) %>%
view()
df %>%
count(org_state)
install.packages("usmap")
install.packages("maps")
# library(usmap) #import the package
library(maps)
df %>%
count(org_state)
map_data("state")
maps::map("state", interior=FALSE)
maps::map("state", boundary=FALSE, col="gray", add=TRUE)
library(tidyverse)
library(googlesheets4)
googlesheets4::read_sheet("1Fgbrg_S4SCgGDEsZ6Z2ayKg6pqTBIDjWADe_YZuvELE")
googlesheets4::read_sheet("1Fgbrg_S4SCgGDEsZ6Z2ayKg6pqTBIDjWADe_YZuvELE")
df <- read_csv("/home/rob/Downloads/Cars 2025 - Sheet1.csv")
df
df %>%
ggplot(aes(x = Mileage, y = Price)) +
geom_point()
df %>%
group_by(Model) %>%
ggplot(aes(x = Mileage, y = Price)) +
geom_point()
df %>%
# group_by(Model) %>%
ggplot(aes(x = Mileage, y = Price, colour = Model)) +
geom_point()
df %>%
group_by(Model) %>%
ggplot(aes(x = Mileage, y = Price, colour = Model)) +
geom_point()
df %>%
group_by(Model) %>%
ggplot(aes(x = Mileage, y = Price, colour = Model)) +
geom_point() +
geom_smooth(method = 'lm', formula = y~x)
df %>%
# group_by(Model) %>%
ggplot(aes(x = Mileage, y = Price, colour = Model, group = Model)) +
geom_point() +
geom_smooth(method = 'lm', formula = y~x)
library(tidyverse)
df <- read_csv("~/Downloads/Chase0122_Activity20230712_20250712_20250712.CSV")
df
df %>%
filter(Description %>% str_detect("fee"))
df %>%
filter(Description %>% str_detect("Fee"))
df %>%
filter(Description %>% str_detect("Card"))
df %>%
type_convert %>%
filter(Description %>% str_detect("Card"))
df %>%
type_convert %>%
head
library(dplyr)
getwd()
setwd("robcreel.github.io/")
list.files()
